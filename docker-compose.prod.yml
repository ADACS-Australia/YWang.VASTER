x-environment: &environment
  # Postgres DB for Django UI

  # PostgreSQL settings
  DB_NAME: ywangvaster
  DB_USERNAME: ywangvaster
  DB_PASSWORD: vast1234star
  DB_HOST: db
  DB_PORT: 5432

  # Do not remove, otherwise postgres container won't initialise properly
  # Just has to be something that's non-zero
  POSTGRES_PASSWORD: password

  # DJango settings
  DEBUG: False
  DJANGO_LOG_LEVEL: INFO
  DJANGO_ALLOWED_HOSTS: localhost 0.0.0.0 [::1] ywangvaster.duckdns.org # Your production URL
  DJANGO_SUPERUSER_USERNAME:
  DJANGO_SUPERUSER_PASSWORD:
  DJANGO_SUPERUSER_EMAIL:
  DJANGO_SECRET_KEY: devkey
  PYTHONDONTWRITEBYTECODE: 1
  PYTHONUNBUFFERED: 1
  SYSTEM_ENV: DEV

networks:
  ywang_vaster-network:
    name: ywang_vaster-network
    driver: bridge

volumes:
  django_media:
  postgres_data:

services:
  db:
    hostname: db
    container_name: db
    build:
      context: .
      dockerfile: ./containers/db/Dockerfile
    user: postgres
    env_file:
      - ./.env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 4s
      timeout: 5s
      retries: 3

  web:
    hostname: web
    container_name: web
    build:
      context: .
      dockerfile: ./containers/web/Dockerfile
    volumes:
      - ./ywangvaster_webapp:/ywangvaster_webapp
      - django_media:/ywangvaster_media
      - ./logs:/home/app/logs/
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: ./containers/nginx/Dockerfile
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 80:80
    depends_on:
      - web
